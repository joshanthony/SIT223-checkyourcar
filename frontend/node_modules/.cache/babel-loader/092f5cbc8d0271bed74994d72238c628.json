{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Dropbox/dev/projects/learning/react/pizza/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'abc1',\n        name: 'Josh',\n        age: 30\n      }, {\n        id: 'abc2',\n        name: 'Joe',\n        age: 29\n      }, {\n        id: 'abc3',\n        name: 'Sha',\n        age: 28\n      }],\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      // get the index of the person id where the event happened\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      }); // get the specific person object and copy it to a new object using the index\n\n      const person = { ...this.state.persons[personIndex]\n      }; // update the person's name to the new name value\n\n      person.name = event.target.value; // copy the full state into a new array\n\n      const persons = [...this.state.persons]; // set the person array copy to override the persons state array at this index\n\n      persons[personIndex] = person; // set the state for this persons array to be the persons array we created\n\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = event => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          key: person.id,\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }));\n    }\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('bold');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"App ready\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Toggle Persons\"), persons);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josh/Dropbox/dev/projects/learning/react/pizza/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person.js';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'abc1', name: 'Josh', age: 30 },\n      { id: 'abc2', name: 'Joe', age: 29 },\n      { id: 'abc3', name: 'Sha', age: 28 }\n    ],\n    showPersons: false\n  }\n\n  nameChangedHandler = (event, id) => {\n    // get the index of the person id where the event happened\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    // get the specific person object and copy it to a new object using the index\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    // update the person's name to the new name value\n    person.name = event.target.value;\n    // copy the full state into a new array\n    const persons = [...this.state.persons];\n    // set the person array copy to override the persons state array at this index\n    persons[personIndex] = person;\n    // set the state for this persons array to be the persons array we created\n    this.setState({persons: persons})\n  }\n\n  deletePersonHandler = (personIndex) => {\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n  togglePersonsHandler = (event) => {\n    const doesShow = this.state.showPersons;\n    this.setState({\n      showPersons: !doesShow\n    });\n  }\n\n  render() {\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    let persons = null;\n\n    if(this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return <Person\n              key={person.id}\n              click={() => this.deletePersonHandler(index)}\n              name={person.name}\n              age={person.age}\n              changed={(event) => this.nameChangedHandler(event, person.id)} />\n          })}\n        </div>\n      )\n    }\n\n    const classes = [];\n    if (this.state.persons.length <= 2) {\n      classes.push('bold');\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p className={classes.join(' ')}>App ready</p>\n        <button \n          style={style}\n          onClick={this.togglePersonsHandler}>Toggle Persons</button>\n          {persons}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
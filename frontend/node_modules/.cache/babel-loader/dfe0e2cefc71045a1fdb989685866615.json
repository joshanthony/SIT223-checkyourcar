{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Dropbox/Deakin/SIT223-Professional-Practice-In-IT/Group-Assignment/CheckYourCar/frontend/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Home from '../pages/Home';\nimport Account from '../pages/Account';\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Header from '../components/Header/Header';\nimport { history } from '../helpers/History';\nimport * as actions from '../store/Actions/Auth';\nconst list = [{\n  \"id\": 1,\n  \"title\": \"title 1\",\n  \"body\": \"body 1\"\n}, {\n  \"id\": 2,\n  \"title\": \"title 2\",\n  \"body\": \"body 2\"\n}, {\n  \"id\": 3,\n  \"title\": \"title 3\",\n  \"body\": \"body 3\"\n}];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAuthenticated: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup(); //this.getIssues();\n  } // getIssues() {\n  //   axios\n  //     .get('http://127.0.0.1:8000/api/')\n  //     .then(res => {\n  //       this.setState({ issues: res.data });\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/account\",\n      exact: true,\n      component: Account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      exact: true,\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      exact: true,\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/josh/Dropbox/Deakin/SIT223-Professional-Practice-In-IT/Group-Assignment/CheckYourCar/frontend/src/containers/App.js"],"names":["React","Component","axios","Route","BrowserRouter","Router","Switch","connect","Home","Account","Login","Register","Header","history","actions","list","App","state","isAuthenticated","componentDidMount","props","onTryAutoSignup","render","mapStateToProps","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,MAAMC,IAAI,GAAG,CACX;AACE,QAAM,CADR;AAEE,WAAS,SAFX;AAGE,UAAQ;AAHV,CADW,EAMX;AACE,QAAM,CADR;AAEE,WAAS,SAFX;AAGE,UAAQ;AAHV,CANW,EAWX;AACE,QAAM,CADR;AAEE,WAAS,SAFX;AAGE,UAAQ;AAHV,CAXW,CAAb;;AAkBA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BgB,KAD0B,GAClB;AACNC,MAAAA,eAAe,EAAE;AADX,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,eAAX,GADkB,CAElB;AACD,GARyB,CAU1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,oBAAY,KAAKO,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,MAA5B;AAA6B,MAAA,SAAS,EAAEX,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,SAAS,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEH,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CAFF,CADF,CADF;AAeD;;AArCyB;;AAwC5B,MAAMe,eAAe,GAAGN,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACO,KAAN,KAAgB;AAD5B,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLL,IAAAA,eAAe,EAAE,MAAMK,QAAQ,CAACZ,OAAO,CAACa,cAAR,EAAD;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Home from '../pages/Home';\nimport Account from '../pages/Account';\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Header from '../components/Header/Header';\nimport { history } from '../helpers/History';\nimport * as actions from '../store/Actions/Auth';\n\nconst list = [\n  {\n    \"id\": 1,\n    \"title\": \"title 1\",\n    \"body\": \"body 1\"\n  },\n  {\n    \"id\": 2,\n    \"title\": \"title 2\",\n    \"body\": \"body 2\"\n  },\n  {\n    \"id\": 3,\n    \"title\": \"title 3\",\n    \"body\": \"body 3\"\n  }\n]\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n    //this.getIssues();\n  }\n\n  // getIssues() {\n  //   axios\n  //     .get('http://127.0.0.1:8000/api/')\n  //     .then(res => {\n  //       this.setState({ issues: res.data });\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Header {...this.props} />\n          <div class=\"container\">\n            <Switch>\n              <Route path=\"/account\" exact component={Account} />\n              <Route path=\"/login\" exact component={Login} />\n              <Route path=\"/register\" exact component={Register} />\n              <Route path=\"/\" exact component={Home} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
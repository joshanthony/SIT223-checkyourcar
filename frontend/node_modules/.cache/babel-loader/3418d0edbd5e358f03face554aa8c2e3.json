{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Dropbox/dev/projects/learning/react/pizza/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport Persons from '../components/Persons/Persons';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'abc1',\n        name: 'Josh',\n        age: 30\n      }, {\n        id: 'abc2',\n        name: 'Joe',\n        age: 29\n      }, {\n        id: 'abc3',\n        name: 'Sha',\n        age: 28\n      }],\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      // get the index of the person id where the event happened\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      }); // get the specific person object and copy it to a new object using the index\n\n      const person = { ...this.state.persons[personIndex]\n      }; // update the person's name to the new name value\n\n      person.name = event.target.value; // copy the full state into a new array\n\n      const persons = [...this.state.persons]; // set the person array copy to override the persons state array at this index\n\n      persons[personIndex] = person; // set the state for this persons array to be the persons array we created\n\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = event => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Cockpit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), persons);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josh/Dropbox/dev/projects/learning/react/pizza/src/containers/App.js"],"names":["React","Component","Cockpit","Persons","App","state","persons","id","name","age","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,MAApB;AAA4BC,QAAAA,GAAG,EAAE;AAAjC,OADO,EAEP;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,KAApB;AAA2BC,QAAAA,GAAG,EAAE;AAAhC,OAFO,EAGP;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,KAApB;AAA2BC,QAAAA,GAAG,EAAE;AAAhC,OAHO,CADH;AAMNC,MAAAA,WAAW,EAAE;AANP,KADkB;;AAAA,SAU1BC,kBAV0B,GAUL,CAACC,KAAD,EAAQL,EAAR,KAAe;AAClC;AACA,YAAMM,WAAW,GAAG,KAAKR,KAAL,CAAWC,OAAX,CAAmBQ,SAAnB,CAA6BC,CAAC,IAAI;AACpD,eAAOA,CAAC,CAACR,EAAF,KAASA,EAAhB;AACD,OAFmB,CAApB,CAFkC,CAKlC;;AACA,YAAMS,MAAM,GAAG,EACb,GAAG,KAAKX,KAAL,CAAWC,OAAX,CAAmBO,WAAnB;AADU,OAAf,CANkC,CASlC;;AACAG,MAAAA,MAAM,CAACR,IAAP,GAAcI,KAAK,CAACK,MAAN,CAAaC,KAA3B,CAVkC,CAWlC;;AACA,YAAMZ,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB,CAZkC,CAalC;;AACAA,MAAAA,OAAO,CAACO,WAAD,CAAP,GAAuBG,MAAvB,CAdkC,CAelC;;AACA,WAAKG,QAAL,CAAc;AAACb,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACD,KA3ByB;;AAAA,SA6B1Bc,mBA7B0B,GA6BHP,WAAD,IAAiB;AACrC,YAAMP,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AACAA,MAAAA,OAAO,CAACe,MAAR,CAAeR,WAAf,EAA4B,CAA5B;AACA,WAAKM,QAAL,CAAc;AAACb,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACD,KAjCyB;;AAAA,SAmC1BgB,oBAnC0B,GAmCFV,KAAD,IAAW;AAChC,YAAMW,QAAQ,GAAG,KAAKlB,KAAL,CAAWK,WAA5B;AACA,WAAKS,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAE,CAACa;AADF,OAAd;AAGD,KAxCyB;AAAA;;AA0C1BC,EAAAA,MAAM,GAAG;AAEP,QAAIlB,OAAO,GAAG,IAAd;;AAEA,QAAG,KAAKD,KAAL,CAAWK,WAAd,EAA2B;AACzBJ,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADtB;AAEE,QAAA,OAAO,EAAE,KAAKc,mBAFhB;AAGE,QAAA,OAAO,EAAE,KAAKT,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKL,OAFL,CADF;AAMD;;AA/DyB;;AAkE5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport Persons from '../components/Persons/Persons';\n\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'abc1', name: 'Josh', age: 30 },\n      { id: 'abc2', name: 'Joe', age: 29 },\n      { id: 'abc3', name: 'Sha', age: 28 }\n    ],\n    showPersons: false\n  }\n\n  nameChangedHandler = (event, id) => {\n    // get the index of the person id where the event happened\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    // get the specific person object and copy it to a new object using the index\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    // update the person's name to the new name value\n    person.name = event.target.value;\n    // copy the full state into a new array\n    const persons = [...this.state.persons];\n    // set the person array copy to override the persons state array at this index\n    persons[personIndex] = person;\n    // set the state for this persons array to be the persons array we created\n    this.setState({persons: persons})\n  }\n\n  deletePersonHandler = (personIndex) => {\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n  togglePersonsHandler = (event) => {\n    const doesShow = this.state.showPersons;\n    this.setState({\n      showPersons: !doesShow\n    });\n  }\n\n  render() {\n\n    let persons = null;\n\n    if(this.state.showPersons) {\n      persons = (\n        <div>\n          <Persons\n            persons={this.state.persons}\n            clicked={this.deletePersonHandler}\n            changed={this.nameChangedHandler} />\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n          <Cockpit />\n          {persons}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}